<?php

namespace App\Repositories;

use App\Models\Promotion;
use App\Repositories\AbstractRepository;

class PromotionRepository extends AbstractRepository
{
    /**
     * @return string
     */
    public function model()
    {
        return Promotion::class;
    }

    public function bulkInsert(array $data)
    {
        $img = $data['image_file'];

        $extension =    substr($img->getClientOriginalName(), strrpos($img->getClientOriginalName(), '.') + 1);
        $filename = time() . '_' . rand(100, 999) . '.' . $extension;

        //Storage::disk('images/stores') -> put($filename, file_get_contents($img -> getRealPath()));
        $folder = storage_path('app/public/images/store/promotion/') ;
        $img->move($folder, $filename);
        $data['logo'] = $filename;
        unset($data['from_date']);
        unset($data['to_date']);
        unset($data['image_file']);
        return Promotion::create($data);
        //return $this->model->create($data);
        //return parent::bulkInsert($data); // TODO: Change the autogenerated stub
    }

    public function updateStore($data)
    {
        if (isset($data['image_file'])) {
            $img = $data['image_file'];
            $extension = substr($img->getClientOriginalName(), strrpos($img->getClientOriginalName(), '.') + 1);
            $filename = time() . '_' . rand(100, 999) . '.' . $extension;

            $folder = storage_path('app/public/images/store/promotion');
            $img->move($folder, $filename);
            $data['logo'] = $filename;
        }
        return $this->update($data, $data['id']);

    }

}
